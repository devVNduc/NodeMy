//String
/* lam viec voi mang
1. to string (chuyen 1 array sang string)
2. join (them ky tu giua cac phan tu)
3. pop (xoa phan tu bat dau tu cuoi mang tro di)
4. push (them phan tu vao cuoi mang)
5. shift (xoa phan tu bat dau tu dau mang)
6. unshift (them phan tu vao dau mang)
7. splicing (cat lay phan tu chi dinh,them phan tu vao vi tri chi dinh)
8. concat (noi chuoi)
9. slicing (cat phan tu o vi tri chi dinh va lay cac phan tu da cat, khong the them phan tu)
*/



//OBJECT

/*var myInfo = {
    name: 'Son Dang',
    age: 18,
    address: 'Ha Noi, VN',
    getName: function() {
        return myInfo.name;
    }
};
myInfo['my-email'] = 'Trongducstvn@gmail.com';
var mykey = 'address'
console.log(myInfo[mykey])
console.log(myInfo['my-email'])
console.log(myInfo.getName())
*/

//Object constructor

function User(firstName, LastName, avatar) {
    this.firstName = firstName;
    this.LastName = LastName;
    this.avatar = avatar;
    this.getName = function () {
        return `${this.firstName} ${this.LastName}`
    }
}
var user = new User('Duc', 'Nguyen', 'Avatar');
var user2 = new User('Dat', 'Nguyen', 'Avatar');
User.prototype.className = 'f8'
user.title = 'Chia se'
user.address = 'Ha Noi'
user2.comment = 'okeoke'
user2.address = 'Ho Chi Minh'
console.log(user)
console.log(user2)
//
// L√†m b√†i t·∫°i ƒë√¢y
function Student(firstName, lastName) {
    this.firstName = firstName;
    this.lastName = lastName;
}
Student.prototype.getFullName = function () {
    return `${this.firstName} ${this.lastName}`
}
// V√≠ d·ª• khi s·ª≠ d·ª•ng
//date
// var date = new Date();
// var year = date.getFullYear();
// var month = date.getMonth() + 1;
// var day = date.getDate();
// console.log(year)
// console.log(month)
// console.log(day)
//
// function getNextYear() {
//     return new Date().getFullYear() + 1;
// }
// console.log(getNextYear())
//
/*function Animal(name, leg, speed) {
    this.name = name;
    this.leg = leg;
    this.speed = speed;
};
var parrot = new Animal('parrot',2,'30')
console.log(parrot)
*/
/*
math object
- Math.PI
- Math.round() lam tron so 
- Math.abs() 
- Math.ceil() lam tron tren 
- Math.floor() lam tron duoi
- Math.random() tra ve so thap phan nho hon 1
- Math.min() lay so lon nhay
- Math.max() lay so nho nhat

*/
// var result = [
//     1,
//     2,
//     3
// ]

// function getRandomItem(array) {
//     if (!Array.isArray(array)) return false;
//     var random = Math.floor(Math.random() * array.length);
//     return array[random];
// }

// console.log(getRandomItem(result))

// cau l·ªánh r·∫Ω nhanh 
// function run(a) {
//     if(a % 3 == 0){
//         return 1
//     }

//     if(a % 5 == 0){
//         return 2
//     }
//     if(a % 15 == 0){
//         return 3
//     }

// }


// // K·ª≥ v·ªçng
// console.log(run(3)) // 1
// console.log(run(5)) // 2
// console.log(run(15)) // 3


// var course = {
//     name: 'Javascript',
//     coin: 250
// }
// L√†m b√†i
function getCanVoteMessage(age) {
    return age >= 18 ? "B·∫°n c√≥ th·ªÉ b·ªè phi·∫øu" : "B·∫°n ch∆∞a ƒë∆∞·ª£c b·ªè phi·∫øu";
}



// K·ª≥ v·ªçng
// console.log(getCanVoteMessage(18)) // 'B·∫°n c√≥ th·ªÉ b·ªè phi·∫øu'
// console.log(getCanVoteMessage(15)) // 'B·∫°n ch∆∞a ƒë∆∞·ª£c b·ªè phi·∫øu'

//vong lap

//for loop
function getRandNumbers(min, max, length) {
    var array = [];
    for (var i = 0; i <= length; i++) {
        array.push(Math.floor(Math.random() * (max - min) + min))
    }
    return array
}
console.log(getRandNumbers(1, 100, 5))
//
// function getTotal(arr) {
//     var sum = 0 
//     for(var i = 0;i < arr.length; i++){
//         sum+=arr[i]
//     }
//     return sum;
// }
// console.log(getTotal([1,2,3]))
//
var orders = [
    {
        name: 'Kh√≥a h·ªçc HTML - CSS Pro',
        price: 3000000
    },
    {
        name: 'Kh√≥a h·ªçc Javascript Pro',
        price: 2500000
    },
    {
        name: 'Kh√≥a h·ªçc React Pro',
        price: 3200000
    }
]
console.log(typeof orders)
var orderLength = orders.length;
var sum = 0
function getTotal(orders) {
    for (var i = 0; i < orderLength; i++) {
        sum += orders[i].price;
    }
    return sum;
}
console.log(getTotal(orders))

//for/in loop
function run(object) {
    var array = []
    for (var key in object) {
        var a = `Thu·ªôc t√≠nh ${key} c√≥ gi√° tr·ªã ${object[key]}`
        array.push(a)
    }
    return array
}

// Expected results:
console.log(run({ name: 'Nguyen Van A', age: 16 }));
// Output:
// [
//     "Thu·ªôc t√≠nh name c√≥ gi√° tr·ªã Nguyen Van A",
//     "Thu·ªôc t√≠nh age c√≥ gi√° tr·ªã 16"
// ]
var myInfo = {
    name: 'Trong Duc',
    age: 18,
};
function run1(object) {
    var array = []
    for (var key in object) {
        var b = `Thu·ªôc t√≠nh ${key} c√≥ gi√° tr·ªã ${object[key]}`
        array.push(b)
    }
    return array
}
console.log(run1(myInfo));
// while loop
var i = 0;
var isSuccess = false;
do {
    i++
    console.log('N·∫°p th·∫ª l·∫ßn ' + i);
    if (false) {
        isSuccess = true;
    }
} while (!isSuccess && i <= 3)
// continue break
//ƒë·ªá quy
var array = ['a', 'b', 'c', 'd']
console.log([...(new Set(array))]);
//
/*
    array methods
        forEach()
        every()
        some()
        find()
        filter()
        map()
        reduce()
*/
//String
// # 1. C√°c c√°ch t·∫°o chu·ªói
//   >> C√°ch 1: var fullName = 'Tran Trong Nam'
//   >> C√°ch 2: var fullName = new String('Tran Trong Nam')

//   - n√™n ƒë√πng c√°ch s·ªë 1
//   - kh√¥ng n√™n d√πng c√°ch s·ªë 2 v√¨: 
//     + d√†i d√≤ng h∆°n
//     + ki·ªÉu d·ªØ li·ªáu s·∫Ω l√† object kh√¥ng ph·∫£i string
//     + ph·∫£i kh·ªüi t·∫°o m·ªôt ƒë·ªëi t∆∞·ª£ng n√™n s·∫Ω ch·∫≠m h∆°n

// # 3. Template string ES6
//   - S·ª≠ d·ª•ng d·∫•u ``
//   - ƒë∆∞a 1 bi·∫øn v√†o trong chu·ªói: ${}
//   VD: console.log(`t√¥i l√†: ${fullName}`)

// # 4. L√†m vi·ªác v·ªõi chu·ªói
//   - Keyword: js string methods
//   - M·ªôt s·ªë thu·ªôc t√≠nh v√† ph∆∞∆°ng th·ª©c hay d√πng
//     >> length
//     + tr·∫£ v·ªÅ ƒë·ªô d√†i c·ªßa m·ªôt chu·ªói
//     VD: fullName.length --> 14

//     >> indexOf()
//     + d√πng ƒë·ªÉ t√¨m v·ªã tr√≠
//     + tham s·ªë th·ª© 1: chu·ªói c·∫ßn t√¨m ki·∫øm
//     + tham s·ªë th·ª© 2: v·ªã tr√≠ b·∫Øt ƒë·∫ßu t√¨m ki·∫øm
//       n·∫øu kh√¥ng truy·ªÅn s·∫Ω m·∫∑c ƒë·ªãnh = 0
//     + t√¨m t·ª´ tr√°i qua ph·∫£i 
//     + kh√¥ng t√¨m th·∫•y s·∫Ω tr·∫£ v·ªÅ -1
//     VD_1: fullName.indexOf('trong') --> 5
//     VD_2: fullName.indexOf('n') --> 3
//     VD_3: fullName.indexOf('n', 5) --> 8
//     VD_4: fullName.indexOf('dep trai') --> -1

//     >> lastIndexOf()
//     + gi·ªëng v·ªõi indexOf nh∆∞ng t√¨m ki·∫øm t·ª´ ph·∫£i qua tr√°i

//     >> slice()
//     + d√πng ƒë·ªÉ c·∫Øt chu·ªói
//     + tham s·ªë th·ª© 1: v·ªã tr√≠ b·∫Øt ƒë·∫ßu
//     + tham s·ªë th·ª© 2: v·ªã tr√≠ k·∫øt th√∫c (m·∫∑c ƒë·ªãnh l√† v·ªã tr√≠ cu·ªëi c√πng)
//     + c·∫Øt t·ª´ tr√°i -> ph·∫£i: 0, 1, 2, 3
//     + c·∫Øt t·ª´ ph·∫£i -> tr√°i: 0, -1, -2, -3

//     VD_1: fullName.slice(5, 10) --> 'Trong'
//     VD_2: fullName.slice(-3) --> 'Nam'

//     >> replace()
//     + d√πng ƒë·ªÉ thay th·∫ø chu·ªói
//     + tham s·ªë th·ª© 1: chu·ªói mu·ªën t√¨m ki·∫øm
//     + tham s·ªë th·ª© 2: chu·ªói mu·ªën thay th·∫ø

//     VD_1: fullName.replace('Nam', 'Minh') --> 'Tran Trong Minh'
//     VD_2: fullName.replace('n', '99') --> 'Tra99 Trong Nam'
//     VD_3: fullName.replace(/n/g, '99') --> 'Tra99 Tro99g Nam'

//     >> toUpperCase()
//     + d√πng ƒë·ªÉ chuy·ªÉn t·∫•t c·∫£ th√†nh ch·ªØ in hoa

//     VD: fullName.toUpperCase() --> TRAN TRONG NAM

//     >> toLowerCase()
//     + d√πng ƒë·ªÉ chuy·ªÉn t·∫•t c·∫£ th√†nh ch·ªØ th∆∞·ªùng

//     VD: fullName.toLowerCase() --> tran trong nam

//     >> trim()
//     + lo·∫°i b·ªè kho·∫£ng tr·∫Øng ·ªü hai ƒë·∫ßu c·ªßa chu·ªói

//     >> Split
//     + d√πng ƒë·ªÉ chuy·ªÉn ƒë·ªïi chu·ªói th√†nh m·ªôt m·∫£ng
//     + tham s·ªë th·ª© nh·∫•t: ƒëi·ªÉm chung ƒë·ªÉ c·∫Øt

//     VD_1: fullName.split(' ') --> ['Tran', 'Trong', 'Nam']
//     VD_2: fullName.split('') --> ['T', 'r', 'a', 'n', ' ', 'T', 'r', 'o', 'n', 'g', ' ', 'N', 'a', 'm']

//     >> charAt()
//     + l·∫•y ra k√Ω t·ª± d·ª± v√†o index

//     VD: fullName.charAt(0) --> T
//     VD: fullName.charAt(11) --> N
//1.length
var myString = 'Hoc JS tai F8!';
console.log(myString.length)
//2.find index
console.log(myString.search('JS'))
//vong lap

//for loop
function getRandNumbers(min, max, length) {
    var array = [];
    for (var i = 0; i <= length; i++) {
        array.push(Math.random() * (max - min) + min);
    }
    return array;
}
getRandNumbers(1, 100, 10)
console.log("üöÄ ~ file: main.js:341 ~ getRandNumbers(1, 100, 10):", getRandNumbers(1, 100, 10))
//for loop
function getTotal(array) {
    var sum = 0;
    for (var i = 0; i < array.length; i++) {
        sum += array[i];
    }
    return sum;
}
getTotal([4, 5, 3, 5])
console.log("üöÄ ~ file: main.js:351 ~ getTotal([4, 5, 3, 5]):", getTotal([4, 5, 3, 5]))
//for in
function run(object) {
    var array = [];
    for (var key in object) {
        var a = ` Thu·ªôc t√≠nh ${key} c√≥ gi√° tr·ªã ${object[key]} `
        array.push(a)
    }
    return array
}
console.log(run({ name: 'Nguyen Van A', age: 16 }));
//for of
var myInfor = {
    name: 'Trong Duc',
    age: 21
}
for (var values of Object.values(myInfo)) {
    console.log(myInfo[values])
}
//while loop
//ƒë·ªá quy
var array = ['a', 'b', 'c', 'a', 'b', 'c'];
console.log([...(new Set(array))]);
//1.x√°c ƒë·ªãnh ƒë∆∞·ª£c ƒëi·ªÉm d·ª´ng
//2.logic handle => t·∫°o ra ƒëi·ªÉm d·ª´ng
//l√†m 1 b√†i ƒë·ªá quy
function GiaiThua(number) {
    if (number <= 0) {
        return 1;
    }
    return sum = number * GiaiThua(number - 1)
};
console.log(GiaiThua(6))
//d√πng c∆° ch·∫ø c·ªßa b·ªô nh·ªõ stack
// array methods:
//     for each()
//     every()
//     some()
//     find()
//     filter()
//     Map()
//     reduce()
var courses = [
    {
        id: 1,
        name: 'Javascript',
        coin: 10
    },
    {
        id: 2,
        name: 'Html, Css',
        coin: 20
    },
    {
        id: 3,
        name: 'Ruby',
        coin: 30
    },
    {
        id: 4,
        name: 'PHP',
        coin: 40
    },
    {
        id: 5,
        name: 'ReactJS',
        coin: 50
    },
    {
        id: 6,
        name: 'Ruby',
        coin: 60
    },
];

//b√†i t·∫≠p m·∫£ng 2
// const sports = [
//     {
//         name: 'B√≥ng r·ªï',
//         like: 6
//     },
//     {
//         name: 'B∆°i l·ªôi',
//         like: 5
//     },
//     {
//         name: 'B√≥ng ƒë√°',
//         like: 10
//     },
// ]
// function getMostFavoriteSport(sports) {
//     var ListSports = sports.filter(function (sports) {
//         return sports.like > 5
//     })
//     return ListSports
// };
// K·ª≥ v·ªçng
// console.log(getMostFavoriteSport(sports))
// Output: [{ name: 'B√≥ng r·ªï, like: 6 }, { name: 'B√≥ng ƒë√°, like: 10 }]
// var newCourses = courses.map(changeCourses);
// console.log(newCourses.join(''))
//reduce()
var i = 0;
function coinhandler(accumulator, currentValue, currentIndex) {
    i++;
    // console.table({
    //     'l∆∞·ª£t ch·∫°y: ': i,
    //     'Bi·∫øn t√≠ch tr·ªØ: ': currentValue
    // });
    return accumulator + currentValue.coin;
}
var totalCoin = courses.reduce(coinhandler, 0)
console.log(totalCoin)
//th·ª±c h√†nh reduce()

var sports = [
    {
        name: 'B∆°i l·ªôi',
        gold: 11
    },
    {
        name: 'Boxing',
        gold: 3
    },
    {
        name: 'ƒê·∫°p xe',
        gold: 4
    },
    {
        name: 'ƒê·∫•u ki·∫øm',
        gold: 9
    },
]
function getTotalGold(sports) {
    var result = sports.reduce(function (accumulator, currentValue) {
        return accumulator + currentValue.gold;
    }, 0)
    return result
};
// Expected results
console.log(getTotalGold(sports)) // Output: 23
//luy·ªán t·∫≠p reduce()2
var watchList = [
    {
        "Title": "Inception",
        "Year": "2010",
        "Rated": "PG-13",
        "Released": "16 Jul 2010",
        "Runtime": "148 min",
        "Genre": "Action, Adventure, Crime",
        "Director": "Nguyen Trong Duc", //true
        "Writer": "Nguyen Trong Duc",
        "Actors": "Leonardo DiCaprio, Joseph Gordon-Levitt, Elliot Page, Tom Hardy",
        "Plot": "A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO.",
        "Language": "English, Japanese, French",
        "Country": "USA, UK",
        "imdbRating": "8.8", //IDMB
        "imdbVotes": "1,446,708",
        "imdbID": "tt1375666",
        "Type": "movie",
    },
    {
        "Title": "Interstellar",
        "Year": "2014",
        "Rated": "PG-13",
        "Released": "07 Nov 2014",
        "Runtime": "169 min",
        "Genre": "Adventure, Drama, Sci-Fi",
        "Director": "Nguyen Trong Duc", //true
        "Writer": "Jonathan Nolan, Nguyen Trong Duc",
        "Actors": "Ellen Burstyn, Matthew McConaughey, Mackenzie Foy, John Lithgow",
        "Plot": "A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival.",
        "Language": "English",
        "Country": "USA, UK",
        "imdbRating": "8.6", //IDMB
        "imdbVotes": "910,366",
        "imdbID": "tt0816692",
        "Type": "movie",
    },
    {
        "Title": "The Dark Knight",
        "Year": "2008",
        "Rated": "PG-13",
        "Released": "18 Jul 2008",
        "Runtime": "152 min",
        "Genre": "Action, Adventure, Crime",
        "Director": "Nguyen Trong Duc", //true
        "Writer": "Jonathan Nolan (screenplay), Nguyen Trong Duc (screenplay), Nguyen Trong Duc (story), David S. Goyer (story), Bob Kane (characters)",
        "Actors": "Christian Bale, Heath Ledger, Aaron Eckhart, Michael Caine",
        "Plot": "When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice.",
        "Language": "English, Mandarin",
        "Country": "USA, UK",
        "imdbRating": "9.0", //IDMB
        "imdbVotes": "1,652,832",
        "imdbID": "tt0468569",
        "Type": "movie",
    },
    {
        "Title": "Batman Begins",
        "Year": "2005",
        "Rated": "PG-13",
        "Released": "15 Jun 2005",
        "Runtime": "140 min",
        "Genre": "Action, Adventure",
        "Director": "Nguyen Trong Duc", //true
        "Writer": "Bob Kane (characters), David S. Goyer (story), Nguyen Trong Duc (screenplay), David S. Goyer (screenplay)",
        "Actors": "Christian Bale, Michael Caine, Liam Neeson, Katie Holmes",
        "Plot": "After training with his mentor, Batman begins his fight to free crime-ridden Gotham City from the corruption that Scarecrow and the League of Shadows have cast upon it.",
        "Language": "English, Urdu, Mandarin",
        "Country": "USA, UK",
        "imdbRating": "8.3", //IDMN
        "imdbVotes": "972,584",
        "imdbID": "tt0372784",
        "Type": "movie",
    },
    {
        "Title": "Avatar",
        "Year": "2009",
        "Rated": "PG-13",
        "Released": "18 Dec 2009",
        "Runtime": "162 min",
        "Genre": "Action, Adventure, Fantasy",
        "Director": "James Cameron",
        "Writer": "James Cameron",
        "Actors": "Sam Worthington, Zoe Saldana, Sigourney Weaver, Stephen Lang",
        "Plot": "A paraplegic marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home.",
        "Language": "English, Spanish",
        "Country": "USA, UK",
        "imdbRating": "7.9",
        "imdbVotes": "876,575",
        "imdbID": "tt0499549",
        "Type": "movie",
    }
];
//tinh diem imb cua cac bo phim co tac gia la nguyen trong duc
function calculateRating(watchList) {
    var listFilm = watchList.filter(function (watchList) {
        return watchList.Director === 'Nguyen Trong Duc'
    });
    var result = listFilm.reduce(function (accumulator, currentValue) {
        return accumulator + Number(currentValue.imdbRating) / listFilm.length;
    }, 0)
    return result
};
//su dung reduce de dem cac so trong mang (reduce tu custom)
//custom reduce
//truong hop chuyen gia tri khoi tao REDUCE2
Array.prototype.reduce2 = function (callback, results) {
    for (let i = 0; i < this.length; i++) {
        results = callback(results, this[i], i, this)
    }
    return results
}
//truong hop khong chuyen gia tri khoi tao REDUCE3
Array.prototype.reduce3 = function (callback, results) {
    let i = 0;
    if (arguments.length < 2) {
        i = 1;
        results = this[0]
    }

    for (; i < this.length; i++) {
        results = callback(results, this[i], i, this)
    }
    return results
}
//ap dung 
const arrayNumber = [1, 2, 3, 4, 5]
function sumArray(arrayNumber) {
    const result = arrayNumber.reduce3(function (results, currentValue, currentIndex, original) {
        return results + currentValue
    }, 0)
    return result
}
console.log('RESULT: ' + sumArray(arrayNumber))
// Expected results:
function arrToObj(arr) {
    return arr.reduce(function (convert, currentValue, currentItem, original) {
        convert[currentValue[0]] = currentValue[2];
        console.log('currentItem: ' + currentItem)
        console.log('original: ' + original)
        console.log(currentValue[0])
        return convert
    }, {});
};
//currentvalue chua gia tri cua array
var arr = [
    ['name', 'S∆°n ƒê·∫∑ng', 'H√† N·ªôi'],
    ['age', 18, 20],
];
console.log(arrToObj(arr))
//include
let arrayCourse = ['a', 'b', 'c']
console.log(arrayCourse.includes('a', 1))
//custom Callback (map,reduce,foreach,filter,find)
//custom map                                                                        
var courses = [
    'Javascript',
    'PHP',
    'Ruby'
];
Array.prototype.map2 = function (callback) {
    var Output = []
    var arrayLenght = this.length;
    for (var i = 0; i < arrayLenght; i++) {
        var result = callback(i, this[i]);
        Output.push(result)
    }
    return Output;
}
var htmls = courses.map2(function (index, course) {
    return `<h2>${course}</h2>`
});
console.log(htmls.join(''))
var test = courses.map(function (course) {
    return `<h3>${course}</h3>`
});
console.log(test.join(''))
// custom Foreach
var Countries = [
    'Viet Nam ',
    'American',
    'Russia'
];
Array.prototype.forEach2 = function (callback) {
    let Output = [];
    let arrayLenght = this.length;
    for (var i = 0; i < arrayLenght; i++) {
        var result = callback(i, this[i])
        Output.push(result)
    }
    return Output
}
var customForeah = Countries.forEach2(function (Country, index) {
    return Country, index
})
console.log("üöÄ ~ file: main.js:693 ~ customForeah ~ customForeah:", customForeah)
// console.log("üöÄ ~ file: main.js:691 ~ customForeah ~ customForeah:", customForeah)
//custom find
Array.prototype.find = function (callback) {
    var length = this.length
    let result
    for (let i = 0; i < length; i++) {
        if (callback(this[i])) {
            result = this[i]
            break
        }
    }
    return result
}
var numberFinds = ['1', '2', '3', '4']
var found1 = numberFinds.find(function (numberFind) {
    if (numberFind > 10)
        return numberFind
})
console.log("üöÄ ~ file: main.js:700 ~ found ~ found :", found1)
//custom filter
Array.prototype.filter = function (callback) {
    let arrayFilter = []
    for (let index in this) {
        if (this.hasOwnProperty(index)) {
            let result = callback(this[index], index, this)
            if (result) {
                arrayFilter.push(this[index])
            }
        }
    }
    return arrayFilter
}
var found2 = numberFinds.filter(function (numberFind, index, array) {
    return array.length % 2 === 0
})
console.log("üöÄ ~ file: main.js:717 ~ found2 ~ found2 :", found2)
//custom reduce
Array.prototype.reduce3 = function (callback, results) {
    let i = 0;
    if (arguments.length < 2) {
        i = 1;
        results = this[0]
    }

    for (; i < this.length; i++) {
        results = callback(results, this[i], i, this)
    }
    return results
}
//ap dung 
const arrayNumbers = [1, 2, 3, 4, 5]
function sumArray(arrayNumber) {
    const result = arrayNumber.reduce3(function (results, currentValue, currentIndex, original) {
        return results + currentValue
    }, 0)
    return result
}
console.log('RESULT: ' + sumArray(arrayNumber))
//custom myMap
const numbers = [1, 2, 3];
Array.prototype.myMap = function (cb) {
    var arrayMap = []
    let arrayLenght = this.length;
    var result
    for (let i = 0; i < arrayLenght; i++) {
        result = cb(this[i], i)
        arrayMap.push(result)
    }
    return arrayMap
}
console.log(numbers.myMap(function (number) {
    return number * 2;
}))
//HTML DOM
// 1.Element: ID, class, tag, CSS selector, HTML colectiond
// 2.Attribute
// 3.Text
var headingNode = document.querySelector('.heading')
console.log(headingNode)
//
var productsListElement = document.getElementsByClassName('.products-list');
console.log("üöÄ ~ file: main.js:776 ~ productsListElement:", productsListElement)
var firstProductElement = document.querySelector('.products-list .product:first-child')
console.log("üöÄ ~ file: main.js:778 ~ firstProductElement:", firstProductElement)
var buttonElements = document.getElementsByTagName(buttonElements)
console.log("üöÄ ~ file: main.js:780 ~ buttonElements:", buttonElements)
//CSS DOM
document.querySelector('h1').classList.add('title')
if (document.querySelector('p').classList.contains('sub-title')
    === true) {
    document.querySelector('.sub-title').classList.replace('sub-title', 'content')
}
// document.querySelector('.sub-title').classList.replace('sub-title', 'content')

/* The above code is invalid JavaScript syntax. It appears to be a mix of JavaScript and another
language or tool that uses the ` */
var classBOX = document.querySelectorAll('div')
// console.log(typeof classBOX)
// console.log("üöÄ ~ file: main.js:791 ~ classBOX:", classBOX)
classBOX.forEach(function (item, index) {
    return item.classList.add('box')
})
//mouse event
var eventColor = document.querySelector('button')
console.log("üöÄ ~ file: main.js:798 ~ eventColor:", eventColor)
eventColor.onclick = function (eventColor) { 
    eventColor.target.style.color = '#fff'
}
////


